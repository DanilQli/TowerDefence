extends Control

var number_card_choose_characters_choose_item
var list_button = []

# Called when the node enters the scene tree for the first time.
func _ready():
	var ind = 0
	get_node("VBoxContainer/Panel/VBoxContainer/HBoxContainer/ButArmanent").pressed.connect(open_armanent)
	get_node("VBoxContainer/Panel/VBoxContainer/HBoxContainer/ButShop").pressed.connect(open_shop)
	get_node("VBoxContainer/Panel/VBoxContainer/HBoxContainer/Close").pressed.connect(close)
	for i in range(len(GameData.tower_data)):
		var panel = load("res://Scenes/SupportScenes/turret_max.tscn").instantiate()
		var data = GameData.tower_data["Turret_" + str(i + 1) + "T1"]
		panel.get_node("VBoxContainer/TextureRect/TextureRect").texture = load("res://Assets/Props/towerDefense_tile_turret_" + str(i + 1) + ".png")
		panel.get_node("VBoxContainer/Label").text = tr("KEY_NAME_TURRET_" + str(i + 1))
		if data["type attack"] in [0, 3]:
			panel.get_node("VBoxContainer/HBoxContainer1/Label1").text = tr("KEY_DAMAGE")
			panel.get_node("VBoxContainer/HBoxContainer2/Label1").text = tr("KEY_RELOAD")
			panel.get_node("VBoxContainer/HBoxContainer3/Label1").text = tr("KEY_RANGE")
			panel.get_node("VBoxContainer/HBoxContainer1/Label2").text = str(data["damage"][0])
			panel.get_node("VBoxContainer/HBoxContainer2/Label2").text = str(data["rof"][0])
			panel.get_node("VBoxContainer/HBoxContainer3/Label2").text = str(data["range"][0])
			panel.get_node("VBoxContainer/HBoxContainer4").queue_free()
		elif data["type attack"] == 1:
			panel.get_node("VBoxContainer/HBoxContainer1/Label1").text = tr("KEY_INTENSIVITY")
			panel.get_node("VBoxContainer/HBoxContainer2/Label1").text = tr("KEY_DURATION")
			panel.get_node("VBoxContainer/HBoxContainer3/Label1").text = tr("KEY_RELOAD")
			panel.get_node("VBoxContainer/HBoxContainer4/Label1").text = tr("KEY_RANGE")
			panel.get_node("VBoxContainer/HBoxContainer1/Label2").text = str(data["intensivity"][0])
			panel.get_node("VBoxContainer/HBoxContainer2/Label2").text = str(data["duration"][0])
			panel.get_node("VBoxContainer/HBoxContainer3/Label2").text = str(data["rof"][0])
			panel.get_node("VBoxContainer/HBoxContainer4/Label2").text = str(data["range"][0])
		elif data["type attack"] == 2:
			panel.get_node("VBoxContainer/HBoxContainer1/Label1").text = tr("KEY_DISTANCE")
			panel.get_node("VBoxContainer/HBoxContainer2/Label1").text = tr("KEY_RELOAD")
			panel.get_node("VBoxContainer/HBoxContainer3/Label1").text = tr("KEY_RANGE")
			panel.get_node("VBoxContainer/HBoxContainer1/Label2").text = str(data["distance"][0])
			panel.get_node("VBoxContainer/HBoxContainer2/Label2").text = str(data["rof"][0])
			panel.get_node("VBoxContainer/HBoxContainer3/Label2").text = str(data["range"][0])
			panel.get_node("VBoxContainer/HBoxContainer4").queue_free()
		get_node("VBoxContainer/Panel/VBoxContainer/Shop/ScrollContainer/HBoxContainer").add_child(panel)
		
		if data["have"]:
			panel.get_node("VBoxContainer/Button").queue_free()
			var have = load('res://Scenes/SupportScenes/turret_choose.tscn').instantiate()
			have.get_node("VBoxContainer/TextureRect/TextureRect").texture = load("res://Assets/Props/towerDefense_tile_turret_" + str(i + 1) + ".png")
			have.get_node("VBoxContainer/Label").text = tr("KEY_NAME_TURRET_" + str(i + 1))
			get_node("VBoxContainer/Panel/VBoxContainer/Armanent/Vbox/Hb/GridContainer").add_child(have)
			print(data["activity"])
			if data["activity"]:
				var activity = load('res://Scenes/SupportScenes/turret_mini.tscn').instantiate()
				activity.get_node("VBoxContainer/TextureRect/TextureRect").texture = load("res://Assets/Props/towerDefense_tile_turret_" + str(i + 1) + ".png")
				activity.get_node("VBoxContainer/Label").text = tr("KEY_NAME_TURRET_" + str(i + 1))
				get_node("VBoxContainer/Panel/VBoxContainer/Armanent/Vbox/Hb/GridContainer/Title" + str(ind + 1)).add_child(activity)
				list_button.append(activity)
				ind += 1
			else:
				var style = have.get_node("VBoxContainer/Button").get_theme_stylebox("normal").duplicate()
				style.set("bg_color", Color(0.0, 0.553, 0.251))
				have.get_node("VBoxContainer/Button").add_theme_stylebox_override("normal", style)
			have.get_node("VBoxContainer/Button").pressed.connect(choose_turret.bind(i))
		else:
			panel.get_node("VBoxContainer/Button").text = tr("KEY_BUY_FOR") + " " + str(data["prise"])
			if data["prise"] <= GameData.resources_money:
				panel.get_node("VBoxContainer/Button").pressed.connect(buy_turret.bind(data["prise"], i + 1))
				

func buy_turret(prise, num_turret):
	GameData.resources_money -= prise
	GameData.config.set_value("Resources", "money", GameData.resources_money)
	get_parent().get_node("Panel/HBoxContainer/Label").text = str(GameData.resources_money)
	GameData.tower_data["Turret_" + str(num_turret) + "T1"]["have"] = true
	GameData.config.set_value("Turret_" + str(num_turret) + "T1", "have", true)
	GameData.write_file()
	close()
	
func open_armanent():
	get_node("VBoxContainer/Panel/VBoxContainer/Armanent").visible = true
	get_node("VBoxContainer/Panel/VBoxContainer/Shop").visible = false
	
func open_shop():
	get_node("VBoxContainer/Panel/VBoxContainer/Armanent").visible = false
	get_node("VBoxContainer/Panel/VBoxContainer/Shop").visible = true
	
func close():
	get_parent().get_node("MarginContainer2").visible = true
	get_node(".").queue_free()

func choose_turret(id):
	print("dd")
	number_card_choose_characters_choose_item = id
	get_node("VBoxContainer/Panel/VBoxContainer/Armanent/Vbox/Hb/GridContainer/Title1/AnimationPlayer").play("rotate")
	get_node("VBoxContainer/Panel/VBoxContainer/Armanent/Vbox/Hb/GridContainer/Title2/AnimationPlayer").play("rotate")
	get_node("VBoxContainer/Panel/VBoxContainer/Armanent/Vbox/Hb/GridContainer/Title3/AnimationPlayer").play("rotate")
	get_node("VBoxContainer/Panel/VBoxContainer/Armanent/Vbox/Hb/GridContainer/Title4/AnimationPlayer").play("rotate")
	
	for i in range(len(list_button)):
		list_button[i].pressed.disconnect(choose_characters_choose_item.bind(1))
		list_button[i].pressed.connect(choose_characters_choose_item.bind(i + 1))

func choose_characters_choose_item(id):
	get_node("VBoxContainer/Panel/VBoxContainer/Armanent/Vbox/Hb/GridContainer/Title1/AnimationPlayer").stop()
	get_node("VBoxContainer/Panel/VBoxContainer/Armanent/Vbox/Hb/GridContainer/Title2/AnimationPlayer").stop()
	get_node("VBoxContainer/Panel/VBoxContainer/Armanent/Vbox/Hb/GridContainer/Title3/AnimationPlayer").stop()
	get_node("VBoxContainer/Panel/VBoxContainer/Armanent/Vbox/Hb/GridContainer/Title4/AnimationPlayer").stop()
	GameData.tower_data["Turret_" + str(id) + "T1"]["activity"] = 0
	GameData.tower_data["Turret_" + str(number_card_choose_characters_choose_item + 1) + "T1"]["activity"] = 1
	for i in range(len(list_button)):
		list_button[i].pressed.disconnect(choose_characters_choose_item.bind(i + 1))
